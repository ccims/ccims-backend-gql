query WhoAmI {
  currentUser {
    id
  }
}

query GetUser {
  node(id: "USER_ID") {
    ...on User {
      username
      displayName
    }
  }
}

query WrongCast {
  node(id: "USER_ID") {
    ...on Project {
      name
      description
      owner {id}
    }
  }
}

query AllProjects {
  projects {
    totalCount
    nodes {
      id
      name
      components {
        nodes {
          id
          name
          issues {
            nodes {
              id
              title
              body
            }
          }
        }
      }
    }
  }
}

mutation CreateComponent {
  createComponent(input: {
    clientMutationID: "Test-String"
    name: "Service-A"
    description: "Lorem ipsum dolor sit amet"
    owner: "USER_ID"
    imsType: GITHUB
    endpoint: "https://example.com/[API]"
    connectionData: "{\"key\": 1234}"
  }) {
    clientMutationID
    component {
      id
      name
      owner {
        id
        username
      }
    }
  }
}

mutation CreateIssue {
  createIssue(input: {
    title: "Bug in API"
    body: "# Problem\n- Some __Bug__"
    componentIDs: ["COMPONENT_ID"]
    category: BUG
    locations: ["LOCATION_ID"]
  }) {
    issue {
      id
      title
      body
      bodyRendered
    }
  }
}

mutation Comment {
  addIssueComment(input: {
    issue: "ISSUE_ID"
    body: "_This_ __is__ `markdown`"
  }) {
    comment {
      body
      bodyRendered
  }
    timelineEdge{
      cursor
    }
  }
}

query Timeline {
  node(id: "ISSUE_ID") {
    ...on Issue {
      complete: timeline {
        nodes1: nodes {
          id
          createdAt
        }
        nodes2: nodes {
          ...on IssueComment {
            body
          }
        }
      }
      after: timeline (after: "CURSOR") {
        nodes {
          ...on IssueComment {
            body
          }
        }
      }
    }
  }
}